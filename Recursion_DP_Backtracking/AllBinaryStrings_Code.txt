Given an integer N , Print all binary strings of size N which do not contain consecutive 1s.

A binary string is that string which contains only 0 and 1.

Example 1:

Input:
N = 3
Output:
000 , 001 , 010 , 100 , 101
Explanation:
None of the above strings contain consecutive 1s. "110" is not an answer as it has '1's occuring consecutively. 
Your Task:

You don't need to read input or print anything. Your task is to complete the function generateBinaryStrings() which takes an integer N as input and returns a list of all valid binary strings in lexicographically increasing order.

Expected Time Complexity: O(2N)
Expected Auxiliary Space: O(N)

Constraints:
1 <= N <= 20
 










class Solution {
    public static ArrayList<String> generateBinaryStrings(int n) {
      // code here
      //BASE CONDITION
      if(n==1)
      {
          ArrayList<String> onearr=new ArrayList<>();
          onearr.add("0");
          onearr.add("1");
          return onearr;
      }
      
      
      ArrayList<String> arr=generateBinaryStrings(n-1);//1
      
      //when n-1 over
      //adding
      ArrayList<String> newarr=new ArrayList<>();//2
      for(String a:arr)//3
      {
          newarr.add("0"+a);
          
          
      }
      for(String a:arr)//4
      {
          if(a.charAt(0)!='1')
          {
          newarr.add("1"+a);
          }
          else{
              continue;
          }
          
          
      }
      return newarr;//5
  
    }
  }
  
